name: "CI"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags-ignore: ["v*.*.*"]
  pull_request:
    branches:
      - main
    tags-ignore: ["v*.*.*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

# permissions: {} # disable permissions

jobs:
  # build:
  #   runs-on: "ubuntu-22.04"
  #   timeout-minutes: 10

  #   permissions:
  #     contents: write
  #     pull-requests: write

  #   env:
  #     PACKAGE_NAME: "vscode-theme-my-darcula"
  #     DIST_DIR: "dist"

  #   steps:
  #     - name: "Checkout Repo"
  #       uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
  #       with:
  #         fetch-depth: 1

  #     - name: "Get Short Commit SHA"
  #       id: git-commit-sha-short
  #       run: |
  #         echo "GIT_COMMIT_SHA_SHORT=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

  #     - name: "Get package version"
  #       id: package-version
  #       run: |
  #         echo "PACKAGE_VERSION=$(grep -o '"version": "[^"]*"' package.json | sed 's/"version": "\(.*\)"/\1/')" >> "$GITHUB_ENV"

  #     - name: "Set up Docker Buildx"
  #       uses: "docker/setup-buildx-action@8026d2bc3645ea78b0d2544766a1225eb5691f89" # v3.7.0

  #     - name: "Build Docker images"
  #       uses: "docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75" # v6.9.0
  #       env:
  #         DOCKER_BUILD_SUMMARY: false
  #       with:
  #         context: .
  #         load: true
  #         push: false
  #         tags: "builder:latest"
  #         cache-from: "type=gha"
  #         cache-to: "type=gha,mode=max"

  #     - name: "Packaging extension"
  #       uses: "addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185" # v3
  #       env:
  #         MOUNT_DIR: "${{ github.workspace }}/${{ env.DIST_DIR }}"
  #         MOUNT_TARGET_DIR: "/workspaces/${{ env.PACKAGE_NAME }}/${{ env.DIST_DIR }}"
  #       with:
  #         image: "builder:latest"
  #         options: "-v ${{ env.MOUNT_DIR }}:${{ env.MOUNT_TARGET_DIR }}"
  #         run: |
  #           sudo chown -R node:node ${{ env.MOUNT_TARGET_DIR }} &&
  #           npm \
  #           --allow-same-version \
  #           --no-git-tag-version \
  #           version ${{ env.PACKAGE_VERSION }}-${{ env.GIT_COMMIT_SHA_SHORT }} &&
  #           task pack

  #     - name: "Upload a Build Artifact"
  #       uses: "actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874" #v4.4.0
  #       env:
  #         ARTIFACT_NAME: "${{ env.PACKAGE_NAME }}_v${{ env.PACKAGE_VERSION }}-${{ env.GIT_COMMIT_SHA_SHORT }}"
  #         ARTIFACT_PATH: "./${{ env.DIST_DIR }}/**/*.vsix"
  #       with:
  #         name: ${{ env.ARTIFACT_NAME }}
  #         path: ${{ env.ARTIFACT_PATH }}

  changesets:
    runs-on: "ubuntu-22.04"
    timeout-minutes: 10

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: "Checkout Repo"
        uses: "actions/checkout@d632683dd7b4114ad314bca15554477dd762a938" # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Dependencies
        run: corepack enable && yarn install --immutable

      - name: "Create Release Pull Request"
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          createGithubReleases: false
          version: yarn exec changeset version
          # publish: yarn exec changeset tag

      - name: Publish
        if: steps.changesets.outputs.published == 'true'
        run: echo "Publish"

      - name: Publish 2
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: echo "Publish 2"
